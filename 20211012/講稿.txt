1頁.
	今天要介紹物聯網在雲端應用
	教你怎麼把資料上傳到雲端物聯網平臺
2頁.
	大綱
	分為4個部分介紹
	1. 簡單介紹IOT平臺的架構
	2. 介紹Adafruit平臺
		A. Paas服務
		B. 因為是英文網站，所以會教怎麼註冊帳號
		C. 在上面新增裝置
		D. 怎麼把數據上船上去
		E. Dashboard
	3. 用Python這個程式來模擬物聯網的裝置
		很多時候這種物聯網裝置都是分工合作完成
		就像打籃球一樣，分為後衛，前衛，中鋒，沒辦法一個人打全場
		如果硬體不在或者還沒Ready的時候，軟體可以寫程式自己模擬
		1. 利用Colab免得資源，怎麼測試
		2. 如果你有一台雲端伺服器，從0建立一個雲端平臺
		3. 教你用一些免費的資源、工具、自己寫程式來測試連線、上傳、模擬資料
	4. 前面講這麼多，有一大半都是教你用模擬的方式去做資料
			這邊會講一些應用的例子，然後給你一個Arduino的程式範例
	5. 問題討論
3頁.
	Iot平臺架構(基礎認知)
	A. 最右邊是我們的裝置，可能是你家中的溫度濕度、機器人、電燈、車子
		各式各樣的智慧裝置(Smart things)
	B. 透過Wifi或藍芽(Networks)
	C. 資料庫、雲端運算，像老師做的PID演算法，例如溫度進來
		如何變成一個控制訊號，例如加溫控制，20度要加溫到50度
		30度的時候，可能是功率100%，加加加到45度的時候
		就要透過PID去運算，變成50%，49度的時候，可能就是20%功率加溫
		還有一些繪圖運算、OpenCV影像辨識....都是(Middleware)的範疇
	D. 最後是包裝成手機App或者網站，讓你看圖表，還是一些操作介面(Application)
4頁.
	Iot平臺架構(MQTT)
	A. MQTT Broker(Server)核心(自己架設的Linux主機還是平臺服務)
		除了這個核心之外，其它圓圈圈只要有跟MQTT Broker連線的物件
		都可以是一個Worker，大家都可以訂閱上面的資訊
		也可以丟資訊上去
	B. Publish、Subscriber
		MQTT就像一個頻道AM、FM，我們可以打訊號上去，也可以接收訊號
		例如: 丟一個FM99.9的廣播電台訊號上去，播放一首蔡琴的歌
			聽眾可以把頻道轉到FM99.9，就可以聽到蔡琴的歌
			只是在MQTT裡面，不是用頻道(Chanel)，我們用Topic
			訂閱某個主題
	C. WebServer、Database
		資料庫也是一個Worker向MQTT Broker訂閱資訊
		然後把這些收到的資訊存到資料庫裏面
		最後用Webserver去呈現資料
	D. 這邊沒提到控制的Worker，那個部分比較深，有機會再來談
5頁.
	Adafruit
		MIT的工程師，2005年創立的
		一群搞硬體的人，一群搞軟體的人
		因為務聯網的世界裡面，軟體通常只需要一個平臺
		硬體需要很創意跟技術
		所以創立了這麼一個學習的平台
		統一的標準，讓大家使用
		透過標準的MQTT(S)、Websocket、HTTP(S)協定
		可以不用學資料庫、不用學繪圖、通通都不用會
		只要你會標準的通訊，就可以輕鬆用這個平臺
6頁.
	Paas服務介紹
		玩雲端一定要知道的三種模式
		Iaas: 給你一個主機上面安裝自己的程式(從作業系統開始)
			比如說我需要1TB的空間、8GB Ram、2Core CPU、GPU、1G網路、固定IP...
			如果想架網站，可以自己架設Apache，自己架設MySQL
			然後防火牆開80port 443port，就可以對外營運了
		Paas:
			比如說就是給你共用的Linux，或者一台Windows，你可以遠端桌面或SSH用這台電腦
			或者它是一個資料庫、MQTT服務...
			這上面提供的服務[不是產品最終的樣子]
		Saas:
			直接部屬應用程式上去
			例如你寫好一段Python程式，直接部屬上去跑
			或者一個網站，給你一個FTP或GIT，直接部屬上去就可以用，這種就是Saas
7頁.
	Adafruit-Paas服務介紹
		還記得剛剛說的這個平臺以學習為目的對吧
		所以它提供了很多現成的Libary可以用
		比如說Arduino、Python、RUBY....只要你引用它的Libary就可以直接使用
		資料上傳、畫成圖表....
		但是今天老師請我來，如果只講這些給你聽，那就沒價值了
		學長要教你們用標準的(MQTT)通訊協定方法存取Adafruit
		不管是Adafruit服務，
		ThingSpeak
		Cloud IoT Core
		AWS IoT Analytics
		還是自己架設的，通吃
8頁.
	Adafruit-Paas服務(免費)
		這個是重點，為什麼我們要從Adafruit入門
		一般這種平臺限制都非常多
		2秒可以存取一次
		30天
		10個資料
		5個樣板
		15分鐘可以一個觸發
9頁.
	因為是英文的，所以學長教你們註冊
10頁.
	填寫資料用寫英文的
	註冊完之後，就可以建立物聯網裝置了
11頁.
	從IO進去，有一個Feeds
	你會看到Default有一個Welcome Feed
	它非常直覺
12頁.
	把Welcome Feed刪除，因為Welcome Feed也算佔一個節點(全部可以10個)
	新增一個Group，這個Group有可能是你的房間，你的溫控箱...
	我這邊新增一個Home，比如說是我租的套房
	裡面新增兩個Feed, temp、humi溫溼度
13頁.
	點進去humi就可以看到你的資料了
	可以Add Data手動新增資料進去
	新增個幾筆，上面馬上就幫你畫出漂亮的圖表了
14頁.
	MQTT重點，IO KEY可以找到username跟key
15頁.
	找到Topic也就是Chanel，要Publish跟Subscrib的目標
16頁.
	有上面兩頁的MQTT的連線資訊之後
	學長這邊提供一個免費，非常好用的工具
	Chrome Extension(用Chrome點開就可以直接安裝)
	學標準通訊協定，很重要的第一步，找到一個好用的工具
17頁.
	新增一個Client照個學長的這個填法...
	看圖說故事
	都好了之後Save
18頁.
	這邊如果顯示Connected恭喜你一經成功一半了
	建一個一個Sub先，Topic填寫的Feed裡MQTT的Topic
	下一步
19頁.
	Publish，看看Sub有沒有收到
	有收到就恭喜你已經成功了
	你可以到你的Feed網頁看看有沒有更新最新的數值
	看看圖表有沒有跑
20頁.
	光是圖表這樣跑不夠看
	有可能我溫度跟濕度想一起看(放在同一頁)
	這時候就要用到Dashboard功能了
	把圖表組合在同一頁
	新增一個HOME
21頁.
	用Create Block建立區塊
22頁.
	勾選你要顯示的資料維度
23頁.
	這邊就是設定你要顯示的資料的詳細設定，比如說資料表名稱
	顯示24小時...
	X軸名稱
	Y軸名稱...
24頁.
	把你的這個Layout縮放到適當大小
	儲存，就完成了
25頁.
	這是學長設計的
	除了圖表之外，也可以弄個雙環表
	旁邊再放一個資料進來的狀況
	那這樣雲端這邊就設置完成了
26頁.
	這邊就要教你們用Python模擬一個裝置上傳到平臺上
	第二個重點
	教你用Linux架設一個MQTT Server(Broker)
	然後前面程式稍微改一下，就可以上傳到自己的Server
27頁.
	Colab
28頁.
	把學長的筆記下載下來
29頁.
	上傳上去，就可以用了
30頁.
	Colab就是一個Saas服務，讓你執行一段Python程式
	我詳細研究之後，發現它也不是一個單純的Saas，也可以是Paas
	它裡面就是一個Linux(有記憶體跟硬碟)
	可以安裝套件
	只是說每次開機執行的時候，都要重新裝一次
31頁.
	指令前面加一個驚嘆號！，就是Linux指令，可以用PIP安裝Python套件
	例如Paho-mqtt
	按一下箭頭，執行就可以安裝了
32頁.
	這邊學長有一個Adafruit的Subscribe範例
	你要先把topic, user, key換掉
	執行後看到Connected就是完成了
	只要在網站上手動Add Data這邊就可以收到訂閱的數值了
33頁.
	但是Colab有一個缺點
	它一次只能執行一個程式
	沒辦法同時執行Subscribe跟Publish測試
	所以執行Publish就要把Subscribe關掉
	但是可以到網站上的Feed看一下有沒有成功丟上去
	如果有成功丟上去，恭喜你Python程式就是這樣而已，很簡單
	可以下一步了
34頁.
	當然功用的平臺很好用
	但沒辦法符合所有人的需求
	例如你想要用AWS自己架設一個Server
	或者老師給你一台主機Server
	又或者要你用Raspberry PI架設一台
	只要5行指令就可以讓你架好Server了
	用最新版的Ubuntu為例
	架設一個"沒"安全性的MQTT Server
35頁.
	沒有安全性的可能不是你的需求
	沒關係再3行指令，就可以設帳號密碼
	讓你的MQTT用有安全性
36頁.
	那學長這邊映提就不著墨太多簡單帶大家看幾個案例
	1. 門窗感應器(可以傳送0,1訊號給Feed)
	2. 土壤濕度感應器，可以像這樣，回傳濕度
	3. 一顆按鈕
	4. G-Sensor加速度感應器
	5. 反向裝置如果Subscribe數值，可以把設定的顏色，套用在變色LED上
	6. 控制電燈開關
37頁.
	現在支援MQTT的裝置真的非常多
	依照使用情境，選擇自己的裝置
	例如簡單的控制就是ESP8266
	需要藍芽ESP32
	進階一點需要做頁系統處理更複雜的IO
	可以用聯發科的Linkit 7688，裡面有作業系統
	可以處理更複雜的IO及運算
	或者是你需要有資料庫，也都可以做得到
	
	更進階一點
	需要影像辨識處理
	可以用Raspberry PI
	
	大概就是這樣
38頁.
	問題與討論
39頁.
	學長所有的資料都放在網站上
	打開網站講解
	韌體的部分，雖然今天沒講，但學長還是把Arduino的範例程式放在上面
	還有Colab上怎麼安裝MQTT Server都擺上去了
	

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	